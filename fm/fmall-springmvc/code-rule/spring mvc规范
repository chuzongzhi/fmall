

1.如何注册controller?
  1> http://localhost:8080/tops-springmvc/requestmapping/demodefault  
  2> http://localhost:8080/tops-springmvc/requestmapping/get/demo?demo=2
  3> http://localhost:8080/tops-springmvc/requestmapping/get/demo1
  4>http://localhost:8080/tops-springmvc/requestmapping/rest/adadf/ssssssssss  rest风格
  5>http://localhost:8080/tops-springmvc/requestmapping/regex/111  正则表达式
  
2.如何注册请求路径 requestMapping标签  RequestMappingController

3.如何定义contoller的方法

  1>.方法能接受哪些参数  @RequestParam @PathVariable @RequestBody @CookieValue 	  @RequestHeader
  http://localhost:8080/tops-springmvc/method/demo/aa
  
  2>.方法的返回值
 		 http://localhost:8080/tops-springmvc/view/model
         http://localhost:8080/tops-springmvc/view/modelandview
         http://localhost:8080/tops-springmvc/view/redirect     	redirect
         http://localhost:8080/tops-springmvc/view/forward          forward
         
         redirect:增加修改必须做跳转

  	

4.ModelAttribute用法 ：尽量少用
	RequestMapping调用前调用，用于每次请求都需要的数据，如下拉菜单选项
	和spring form标签中的modelAttribute没有直接关系


5.表单及验证

  http://localhost:8080/tops-springmvc/form/getForm
  
  用spring的form标签
  1.spring同步验证
  步骤 1.<#assign spring=JspTaglibs["http://www.springframework.org/tags"]>
		<#assign form=JspTaglibs["http://www.springframework.org/tags/form"]> 
	  2.<@form.form modelAttribute="demo" action="${req.contextPath}/form/saveHotel">
			<p>名称:<@form.input path="name" class="input_txt span_250" />   <@form.errors path="name" htmlEscape="false" />  </p>
			<p><input  type="submit" value="提交"></p>
		</@form.form>
	   3.在返回表单页面之前把modelAttribute="demo"放入model中
	   4.public ModelAndView saveHotel(@Valid Demo demo) ，加上 @Valid注解
	   5.javabean加验证标签
			@NotBlank
			@Size(max=2)
			private String name;
			@NotBlank(message = "code.empty")
			@Size(max=2)
			private String code;
			
	2.kendoUI
		1.引入kendoUI的js <script src="${basepath}/resources/javascripts/common/kendo.all.min.js" type="text/javascript"></script>
		2.form表单中的input加入kendo的属性    
			<@form.input path="name" class="input_txt span_250" required=true  minLength="1" maxLength="10" type="text"/>  required=true 必填项  
	    3.注册验证
		    $(function(){
				var validatable = $("#form").kendoValidator().data("kendoValidator");
				$("#submit").click(function(){
					if(validatable.validate()){
						$("#form").submit();
					}
				})
				
			})
			
	3.ajax验证
		1.引入标签js
			<script src="${basepath}/resources/javascripts/common/ajaxValidation.js" type="text/javascript"></script>
		2.新建验证对象和注册

					
6.js面向对象思想
				
